
parameters:
  downloadArtifacts: true

steps:

##
# Pre-reqs
##
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK 3.1.201'
  inputs:
    packageType: sdk
    version: '3.1.201'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.7'
    architecture: 'x64'
  displayName: 'Use Python 3.7'

- script: pip install setuptools wheel pytest jupyter numpy matplotlib qsharp pyzmq==19.0.2
  displayName: 'Install Python tools'

- powershell: ./install-iqsharp.ps1
  displayName: "Installing IQ#"
  workingDirectory: $(System.DefaultWorkingDirectory)/scripts

- ${{ if eq(parameters.downloadArtifacts, 'true') }}:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download artifact: drop'
    inputs:
      downloadPath: $(System.DefaultWorkingDirectory)
      artifactName: binaries

  - pwsh: dotnet nuget add source -n build-artifacts $(System.DefaultWorkingDirectory)/binaries/drops/nugets
    displayName: "Adding build-artifacts nuget source"

  - powershell: |
      # Updates every csproj using the Microsoft.Quantum.Katas package to use this build's version
      # old version regular expression accounts for possible suffixes like "-beta"
      $Version = "$(Build.BuildNumber)-alpha"
      $versionRegex = "(?<oldVersion>[0-9|\.|\-|a-z]+)"

      "Updating packages to Microsoft.Quantum.Katas version $Version" | Write-Host
      $csStringPackage = 'PackageReference Include=\"Microsoft\.Quantum\.Katas\" Version=\"' + $versionRegex + '\"'
      $csFiles = (Get-ChildItem -Path $katasRoot -file -Recurse -Include "*.csproj" | ForEach-Object { Select-String -Path $_ -Pattern "Microsoft.Quantum.Katas" } | Select-Object -Unique Path)
      $csFiles | ForEach-Object {
          (Get-Content -Encoding UTF8 $_.Path) | ForEach-Object {
              $isQuantumPackage = $_ -match $csStringPackage
              if ($isQuantumPackage) {
                  "++ Updating $_"  | Write-Host
                  $_ -replace $Matches.oldVersion, $Version
              } else {
                  $_
              }
          } | Set-Content -Encoding UTF8 $_.Path
      }

      "Changes after update: " | Write-Host
      git status | Write-Host
    displayName: "Updating Katas package version"
    workingDirectory: $(System.DefaultWorkingDirectory)/scripts
